<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.06pkqrt1qne66w1fe1ivo1ogsy0p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.1qkiy1y1eifba71akejaz1960fpk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shash/Desktop/Data Analyst Project/Covid Data Analysis/Tableau/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1qkiy1y1eifba71akejaz1960fpk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='B2:D3:no:B2:D3:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1qkiy1y1eifba71akejaz1960fpk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='B2:D3:no:B2:D3:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;B2:D3:no:B2:D3:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4F143E42FC02437EBE2D75BF67490B58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4F143E42FC02437EBE2D75BF67490B58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4F143E42FC02437EBE2D75BF67490B58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4F143E42FC02437EBE2D75BF67490B58]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/shash/AppData/Local/Temp/TableauTemp/#TableauTemp_0rvxyf712xik621elkf3w1w39i3z.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/14/2024 04:57:57 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4F143E42FC02437EBE2D75BF67490B58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4F143E42FC02437EBE2D75BF67490B58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4F143E42FC02437EBE2D75BF67490B58]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4F143E42FC02437EBE2D75BF67490B58'>
            <properties context=''>
              <relation connection='excel-direct.1qkiy1y1eifba71akejaz1960fpk' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='B2:D3:no:B2:D3:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1kuxrrz14m87au1b1j8k21ub64zw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.1e5bbnd01tn2zk18lj8f807tt8c4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shash/Desktop/Data Analyst Project/Covid Data Analysis/Tableau/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1e5bbnd01tn2zk18lj8f807tt8c4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1e5bbnd01tn2zk18lj8f807tt8c4' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AC0443E7BC444C2680006797A67766EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AC0443E7BC444C2680006797A67766EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AC0443E7BC444C2680006797A67766EF]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/shash/AppData/Local/Temp/TableauTemp/#TableauTemp_0yrtqdo0dl9h5i1cbaboj117xmqa.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/14/2024 04:58:11 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AC0443E7BC444C2680006797A67766EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AC0443E7BC444C2680006797A67766EF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_AC0443E7BC444C2680006797A67766EF'>
            <properties context=''>
              <relation connection='excel-direct.1e5bbnd01tn2zk18lj8f807tt8c4' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.03zvsea1qodbr115g3ja5103wodk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.0j8cos51gwjg4t1flmeog1jkn8w1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shash/Desktop/Data Analyst Project/Covid Data Analysis/Tableau/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0j8cos51gwjg4t1flmeog1jkn8w1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0j8cos51gwjg4t1flmeog1jkn8w1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/shash/AppData/Local/Temp/TableauTemp/#TableauTemp_12sw3nz1tzopyw17kzciw0tmmhce.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/14/2024 04:58:20 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_51D7CC1D3BA240418350508FEB6C39C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_51D7CC1D3BA240418350508FEB6C39C7'>
            <properties context=''>
              <relation connection='excel-direct.0j8cos51gwjg4t1flmeog1jkn8w1' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0m1e14g1h72pnd1cblgff0yfag11' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.17l3jsr00eeqec1eaechc186ozre'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/shash/Desktop/Data Analyst Project/Covid Data Analysis/Tableau/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17l3jsr00eeqec1eaechc186ozre' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17l3jsr00eeqec1eaechc186ozre' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2233BEEFA4F04480911486A8225E9386]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/shash/AppData/Local/Temp/TableauTemp/#TableauTemp_15ayjis0ildg0b17683sm1vw4msa.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/14/2024 04:58:37 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>254</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8884</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53119</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62586</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2233BEEFA4F04480911486A8225E9386]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2233BEEFA4F04480911486A8225E9386'>
            <properties context=''>
              <relation connection='excel-direct.17l3jsr00eeqec1eaechc186ozre' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Covid-19 Stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.06pkqrt1qne66w1fe1ivo1ogsy0p' />
          </datasources>
          <datasource-dependencies datasource='federated.06pkqrt1qne66w1fe1ivo1ogsy0p'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[:Measure Names]' value='163' />
            <format attr='height' value='43' />
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='text-format' field='[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#ffaffe' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9670165777206421' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5D62A831-C7D2-41BC-AB2F-BEB0D39A02F4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infections Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1kuxrrz14m87au1b1j8k21ub64zw' />
          </datasources>
          <datasource-dependencies datasource='federated.1kuxrrz14m87au1b1j8k21ub64zw'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]' value='89' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kuxrrz14m87au1b1j8k21ub64zw].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{2994F875-C32A-46B0-9A0C-3F3A318F6867}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.03zvsea1qodbr115g3ja5103wodk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03zvsea1qodbr115g3ja5103wodk'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03zvsea1qodbr115g3ja5103wodk].[Longitude (generated)]' field-type='quantitative' max='27669427.26261301' min='-10712907.539848708' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.03zvsea1qodbr115g3ja5103wodk].[Latitude (generated)]' field-type='quantitative' max='11431015.6667119' min='-6659019.3474802077' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03zvsea1qodbr115g3ja5103wodk].[sum:PercentPopulationInfected:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.03zvsea1qodbr115g3ja5103wodk].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.03zvsea1qodbr115g3ja5103wodk].[none:Location:nk]' />
              <color column='[federated.03zvsea1qodbr115g3ja5103wodk].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.03zvsea1qodbr115g3ja5103wodk].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03zvsea1qodbr115g3ja5103wodk].[Latitude (generated)]</rows>
        <cols>[federated.03zvsea1qodbr115g3ja5103wodk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{692C142D-CF93-44BC-BDBD-E81912A10A09}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0m1e14g1h72pnd1cblgff0yfag11' />
          </datasources>
          <datasource-dependencies datasource='federated.0m1e14g1h72pnd1cblgff0yfag11'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0m1e14g1h72pnd1cblgff0yfag11].[tmn:date:qk]' scope='cols' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]' />
              <text column='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]' />
              <color column='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Forecast Indicator:nk]' />
              <text column='[federated.0m1e14g1h72pnd1cblgff0yfag11].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m1e14g1h72pnd1cblgff0yfag11].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0m1e14g1h72pnd1cblgff0yfag11].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{B20F8828-E7EA-48EC-A5F6-BF1486D0DBEA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98060' id='20' param='horz' type-v2='layout-flow' w='99034' x='483' y='970'>
            <zone h='98060' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='970'>
              <zone h='98060' id='6' type-v2='layout-basic' w='99034' x='483' y='970'>
                <zone h='24485' id='3' name='Sheet 1' w='49517' x='483' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='24484' id='16' name='Sheet 2' w='49517' x='483' y='25455'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49091' id='12' name='Sheet 4' w='89376' x='483' y='49939'>
                  <layout-cache minheight='283' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49091' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]&#10;[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Forecast Indicator:nk]' type-v2='color' w='9658' x='89859' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48969' id='18' name='Sheet 3' w='39861' x='50000' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48969' id='21' name='Sheet 3' pane-specification-id='1' param='[federated.03zvsea1qodbr115g3ja5103wodk].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98060' id='22' param='vert' type-v2='layout-flow' w='99034' x='483' y='970'>
                <zone fixed-size='188' h='24485' id='3' is-fixed='true' name='Sheet 1' w='49517' x='483' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48969' id='18' is-fixed='true' name='Sheet 3' w='39861' x='50000' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='48969' id='21' name='Sheet 3' pane-specification-id='1' param='[federated.03zvsea1qodbr115g3ja5103wodk].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='970'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24484' id='16' is-fixed='true' name='Sheet 2' w='49517' x='483' y='25455'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49091' id='12' is-fixed='true' name='Sheet 4' w='89376' x='483' y='49939'>
                  <layout-cache minheight='283' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49091' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]&#10;[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Forecast Indicator:nk]' type-v2='color' w='9658' x='89859' y='49939'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4AC1E38D-72EA-4085-8FC0-52B827CC2943}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06pkqrt1qne66w1fe1ivo1ogsy0p].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E09FB322-78F2-438C-B295-400C0471F79B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A695401-1ED9-4536-8E7D-757C3204C5E4}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.03zvsea1qodbr115g3ja5103wodk].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03zvsea1qodbr115g3ja5103wodk].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DD43B733-E8CB-4E8D-BF19-BACE23FE90AD}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]&#10;[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0m1e14g1h72pnd1cblgff0yfag11].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Forecast Indicator:nk]</field>
            <field>[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]</field>
            <field>[federated.0m1e14g1h72pnd1cblgff0yfag11].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{503D2237-13D5-4AA7-BABF-6F823F10EE6A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight field='[federated.1kuxrrz14m87au1b1j8k21ub64zw].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Forecast Indicator:nk]</field>
              <field>[federated.0m1e14g1h72pnd1cblgff0yfag11].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DBF51A07-6BC5-4491-8867-5147127102FD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='67' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABDCAYAAADK+ApxAAAACXBIWXMAABJ0AAASdAHeZh94
      AAANUElEQVR4nO2cd1TUVxbHPxDAQcGGwFhBRVEUxaAoYtDY1mjQ2HdjIVEUSdRgSewb42rU
      RA0rGktco5Ao2EuMEDSoEUWaBaUoRawYFRQQRsqwf6ATEJgZWJBsfu9zDudw3rv33cvM+/Lu
      /TE8ncLCwkIEAomiW9MJCAQ1iRCAQNIIAQgkjRCAQNIIAQgkjRCAQNIIAQgkjZ4mAx0dndeR
      h0BQI2gUAEDhQWV15yEQaERnuG6V70VRAgkkjRCAQNIIAQgkjVY9gKDipISMZ2RwfDmz1szw
      +AFXk2pO4vFOxm3agNWYcL5oW46NMo2LEV54nz3Flewc9GUWdOk8k6UDnDGr5vT+DAgBVBMW
      Tj8Q4VT0fZEYrFi3eCnOFV7pDJ8vn0PC2/v40cmiirNM4bCfO6se2bNwYgBbG9WG3JsEB54g
      ASEAwV+cjOj1rEpqxDSPFbi8PI0MLBng4lajeb1OhABqmPxnF/nx2Ap2JKaQWWBIM8txfDZ8
      Mj3r6MH1pXTdc6zIMHgUXYPhj/LpGTGRq1lz9iyxmZnkoY+xiRMfuCzBtVldLSI/JujSGfLa
      LGNUuaWYFjFyrrDz6LIX+etjbNKFoX0WM6N946LNpbzPr8cXsepqNGl5lfCvZkQTXJMoI/lm
      61R26bji82k4EfP387HxQWZuXcW550DbpUQsXssQwPrtfUQsDidi8cve4Qn3nrXmw38c4vTi
      cCLmH2Zhk2i8/TYRptWj8mtcSQHrZjbUKddGc4zI07PwfjqQb+ecJ2LxKQ6PfA9F/BnuAvCM
      c8c+ZHlaf/49q2jep7uSnb7z2J+hjX/1IwRQgzy+uA1/RV9mD3WhuR6gZ8oAl4UMURzG9+pj
      Dd5N6e/syltmdTHghW83FxoroolNr6oMNcd49jwDjBrT1EAPMKCu2QAWvDcWC4CsQHwv12f8
      oPdp/2K++ZuTGWkUwYkbjzX7vwZECVSDxN+7DI3caVer2KCuBa0awbE718BefcuccWcPa4J8
      +C31AZkFL0etqzRHTTHsO4xAvncZQzYE8E6X4Qzt5ExHY4OiydQYLpFI+JZufPvKutaKLMBE
      vf9rQAjg/5WMA8zz9SK7+3r8J3TFTI8Xjz2DtFygA50s4NidGJ5hUXYZpEWMOlYLODTnQ+IS
      AjkStRGP4H9Sr/Mqdrk4U1eZTx6t+cjdj0mmZWeh1r9ir0ilECVQDWLdpDM8iiHuebHB5/Fc
      ewTdmnVQ75x6hfCCvrj2ebExK4wJvWy6on/jR/aVV21pGUPPQE5HG1cWjj/IsZF9yb68naPp
      gGkbOpDIueQHajMp1/81IARQg5h0cWOs7FfWHTnK7Xwg/yFBAev4VTaMCR1fPpop+k2dFHeS
      6/mAMpdcJVC3MS04z8nYNPLJJeP3IFYe3ElSBeKb28/Hs9ktNv+4iKOPsskHchUJBB3dxjm0
      iZGC/6F/4n8zlWwlQC6KfABDZPpAAxfGttHn0sl5bLz5kFyA/AwSrm/B+/Jdzf6vAVEC1SS6
      9syauhWzYyuY+PUy1WPQ9VMn01PVF5gwzGU11/ctx3XVJvL07Zk/dTOj5P9gaa+LfHLkb/Q4
      Ykz79tP4dJArV3doWwIBWDB24iHanl/Jap9BfFH8L8EAGmM0xdm2NZuCXdlwN40cwLC2LYNH
      rmCYEUBdBo/ej+z4Ilb5D+b7PNCXmdPeajRT+pgDaPCvfnQ03Quko6MjPg4t+FMgPg4tEFQx
      QgACSSMEIJA0WvUAAsFfFa2eAiU/fljdeQgEGmlpYlrle1GUQAJJIwQgkDRCAAJJIwQgkDRC
      AAJJIwQgkDRCAAJJIwQgkDRCAAJJIwQgkDRCAAJJIwQgkDRCAAJJIwQgkDSSE4DX6q9oaWJa
      7petZSuiwsMB+HjSZLW2jradSb13T7X22hVfalxTHc+ysvhiwUK6WLWlpYkpXaza4r1mLbnP
      c0vYZTx9yoa16xjg6ETbxk1VMTzdp3Hn1u0StkqlEg/XD7XKvzxyn+fivWatKq8eHWzZ7+eH
      Ulny/3O1jfXz4SNqX9eWJqb8fPiIxryqAsndCuE57zM8531W5tzeXbvx3fYfWllZAbBx+3/K
      XWfl0i9ITkikkWnRjU9KpZKE6zdY5fUNYyeMr3BeT588Ycr4CZiamRFw9gymZmZci45m7kfT
      SUpMZLWXFwa1im5M2/ndNmKvXmXdpo20s7FB38CAB6mpfP2vFUwYOYode/yxaGkJQFZmJunp
      afxwcD9OzhW/nD0/L4+Fs+eQeOMGB38JoIWlJeHnQ5nl8RHpaem4feShstU21uBhQ8v9XH9o
      SAgLPGdjY9uxwrlWBsmdAOWRlZmJv68vE9wmU79BA7W2t1NucerESSZ5uKOnr6/yT09Po5lF
      i0rF/+Xn4+i9ocfXG7wxl8vR1dXFtnNnvt2xnYjQUH4LDlbZenwyk293fI+tnR36BkWiMJfL
      +XLdWixaWnIyMFBlm/E0g2eZWTRp2rRSeUWEhRFx4QJrNnpj2aoVurq6dHfqyVfrvdi7aze3
      U25VWaz8vDz8fHwZOGQwlq1aVWqNiiIE8ILzZ8+SlZVF7359NdoeP3IEM3NzOnXpohr7X9/8
      UydO0P+dQdSuXbvEeOs2bXDq3ZuggADV2EvRvYqevh6GhrXJzs5WjaXeu4fMUKZR1OUR9PNx
      HBx70LJ16xLjdvb2GBsbcTkqqspixcXGEn3pMsNGjqyUf2UQAgCys7Px2badEWPGYGZurtb2
      9wcPOLBnDxPdJpXYrP/rmw9Qp07ZF5U79urF9dg4sjIz1fpHhYUTHxtL3wEDVGN379yhbr16
      GBsbVzif/Lw8biYlYe/ggK5uya1iZGyMlbU18TExVRJLqVSya8dO7B260a6DTYX9K4sQABAV
      Fkba40cMGz1Ko+3JgEAaNjTBqXfvEuOPHj0kKjyCN9tY09LElNam5vTsZMfmf68nJydH47rN
      WrQgKCCgVMML0NyiBTk52WRlZZWaKygoICkhgUVz5vKJ+zSWrFheon6+fesWv/4SRBt5E1qa
      mGJlJqdfd0f2+/lRUFBQar3iKBQK0tPSMa5b9jW18saNSUpMrJJYyYmJRF4IY+IUt1Jiq04k
      1wS/SmhICEs+ncf3/rsxl8vV2u7dtZvdO33w2b+3VKky6N13SXxY+hLYp0+e8P6w4biMGM6k
      ae7lrr1g6efcuXWbz2bOJPCnYygUCho0bIhTb2e6Ofagdu061KpVq5Sfjo4OdYyMsHfoRlR4
      OPv9/HBw7EEdo6K7BafPnsX02bNK+d1MSqJ/j54sWbGcvgMHlJqvDJWNdTMpCbf3x7PSax0d
      O3Wqkly0RdInQEWaroo0ycWpV78+vXo7c+XiRY22zVo0x2vLZmLv3ib58UOibsTjve076tWr
      j6GhIYaviA5AV1cXc7mcEWPHciAwgMLCQtavWasxVgtLS9rZ2BBz9Wq5NjKZjAYNG5CZkVHm
      fOr9+7R6pTeoTKxDe/fRxtqarg4OGteqaiQtgIo0XRVpkstCZmhYKT+lUknI6dM4930bmUym
      1tbQ0JAhw4YRfj5UY7/wkldPsuLo6etja2dHZFhYqWf+WZmZJMTHY22jfb1eVqwHqakcP/oT
      Y8ePK7e5r04kKwClUonPd9u0arqys7PZvmlLuU2yQqEg5MyZMuvctEePOXXiJL1e6Rm0JfJC
      GFHhEQwcMhgoqvnzckv3CS+5c+sWjUxNkclkPElPJ+JC6c0LRTX39bg47OzfVBu/Ry8nws6H
      klys1ge4FBlJTk4O3Rx7AFQ61uG9+2jYsCGOzm+pzaO6kKwA4q7FEBkWrlXTdf7Mb6Slpalt
      krdv3sLQfv0JOX0ahUKBUqkk8cYN3CdOpG69evTp309l+yQ9HZe3++HpPk01lnr/PvNmfkL0
      5cuqTX4iIIC506czffYsVYn28MEDXPr1Z+2XK0lKSFCJ7kl6Olu9N/D9lq1Mnf4xevr6FBQU
      8Pm8eXww5u9EX7pEXm4uBQUFRIaFM2XcBLp2d6CTnZ0qh9CQEDq0sCTgp59UYw6OjvR0fou5
      H8/gZlISSqWSCyHnmO85m4lubqq+qaKx4I8napM83NWeRNWJJJtgpVLJwT17sLXrTLv27dXa
      5j7PZbevL++4vFtukyyTydjq68NvwadYvWw5cTEx5OXmYi6X88HUKbhOnYJhsRIoPDSU+/fu
      8a81X6nGTM3McOjpiOfUaaQkJwNg07EjX36zrsRfVeVNmrB+6xY2r9/A+BGj+D01lYKCAoyM
      jenTvx879/rT9sXPZNKoEYd+CeTw/gN4unuQkpxMYWEhzS0smDF3Nu+NHs0bb7yhek0O+PnT
      oZNtidNKV1eXpStXssXbm+EDB/EkPR1zuZxPlyxi+JgxKruKxHrJyYBAjIyMcOzVS+17UJ1o
      dTeouBqx6sjPy2P65Cl06GTLjLlzajodFTeTknCf4Mrq9V7Y2dvXdDplIq5G/AsQFxuLnr4e
      k4t9hubPQNDxAEaPe/9Pu/mrC3ECCP5vECeAQFDFCAEIJI0QgEDSCAEIJI0QgEDSCAEIJI0Q
      gEDSCAEIJM1/AcHjznllsAJIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      ZACkqvb/AYHBpIeqLxgsAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
